plugins {
    // TODO: Does referencing via dot notation circumvent declaration for version catalog?
    // TODO: or is it using the version we declare in top level build script via:
    // TODO: `alias(libs.plugins.android.library)`?
    id 'com.android.library'
    id 'kotlin-android'
    // https://github.com/Kotlin/kotlinx.serialization
    // Applies plugin we aliased in top level project buildscript (OnHand build.gradle)
    id 'kotlinx-serialization'
}

android {
    namespace 'com.tstreet.onhand.core.network'
    compileSdk 32

    defaultConfig {
        minSdk 23
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation project(path: ':core:model')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Manually added deps below here
    implementation libs.okhttp.logging
    implementation libs.kotlinx.serialization.json
    implementation libs.retrofit.kotlin.serialization

    // di TODO: every module will need this, refactor once better understood
    implementation 'com.google.dagger:dagger:2.44.2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.17'
}