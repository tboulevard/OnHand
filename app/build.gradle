plugins {
    // TODO: Does referencing via dot notation circumvent declaration for version catalog?
    // TODO: or is it using the version we declare in top level build script via:
    // TODO: `alias(libs.plugins.android.application)`?
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    namespace 'com.tstreet.onhand'
    compileSdk 32

    defaultConfig {
        applicationId "com.tstreet.onhand"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // On implementation vs. api:
    // If you are a library maintainer you should use 'api' for every dependency which is needed for
    // the public API of your library, while 'implementation' should be used for all dependencies
    // which must not be used by the end consumers. 'api' effectively leaks the internal
    // 'implementation' of dependencies, 'implementation' does not. 'implementation' does not force
    // a recomplication of the dependency because we are indicating it is not 'within our control'.
    //
    // Think of 'api' dependency as public (seen by other modules) while 'implementation' dependency
    // as private (only seen by this module).
    implementation libs.androidx.core.ktx
    implementation libs.androidx.activity.compose
    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.ui.tooling.preview
    implementation libs.androidx.compose.material
    /// TODO: Needed?
    //implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'

    testImplementation libs.junit4
    androidTestImplementation libs.androidx.test.ext
    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation libs.androidx.compose.ui.test

    debugImplementation libs.androidx.compose.ui.tooling
    debugImplementation libs.androidx.compose.ui.test.manifest
}